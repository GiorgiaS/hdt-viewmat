<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Dec 07 14:21:13 CET 2023
  Author:  sirigu
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CoronaryHeartDisease"
               targetNamespace="http://xmlns.oracle.com/Workflow/CoronaryHeartDisease/CoronaryHeartDisease"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/Workflow/CoronaryHeartDisease/CoronaryHeartDisease"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable">

    <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/Workflow/CoronaryHeartDisease/CoronaryHeartDisease" location="../WSDLs/CoronaryHeartDisease.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="coronaryheartdisease_client" partnerLinkType="client:CoronaryHeartDisease" myRole="CoronaryHeartDiseaseProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:CoronaryHeartDiseaseRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:CoronaryHeartDiseaseResponseMessage"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in CoronaryHeartDisease.wsdl) -->
    <receive name="receiveInput" partnerLink="coronaryheartdisease_client" portType="client:CoronaryHeartDisease" operation="process" variable="inputVariable" createInstance="yes"/>
    <sequence name="Sequence2">
      <invoke name="Task1" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
              inputVariable="Service1_input" outputVariable="Service1_output" bpelx:invokeAsDetail="no">
        <bpelx:toProperties>
          <bpelx:toProperty name="probability">Task0:1</bpelx:toProperty>
          <bpelx:toProperty name="paths">path1 path2 path3 path4 path5 path6 path7 path8 path9</bpelx:toProperty>
        </bpelx:toProperties>
      </invoke>
      <if name="If3">
        <sequence name="Sequence3">
          <invoke name="Task2" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                  inputVariable="Service1_input" outputVariable="Service1_output" bpelx:invokeAsDetail="no">
            <bpelx:toProperties>
              <bpelx:toProperty name="probability">Task1:0.5</bpelx:toProperty>
              <bpelx:toProperty name="paths">path2 path3 path4 path5 path6 path7 path8 path9</bpelx:toProperty>
            </bpelx:toProperties>
          </invoke>
          <if name="If4">
            <sequence name="Sequence4">
              <invoke name="Task3" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                      inputVariable="Service1_input" outputVariable="Service1_output" bpelx:invokeAsDetail="no">
                <bpelx:toProperties>
                  <bpelx:toProperty name="probability">Task2:0.5</bpelx:toProperty>
                  <bpelx:toProperty name="paths">path3 path4 path5 path6 path7 path8 path9</bpelx:toProperty>
                </bpelx:toProperties>
              </invoke>
              <if name="If5">
                <sequence name="Sequence5">
                  <invoke name="Task4" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                          inputVariable="Service1_input" outputVariable="Service1_output" bpelx:invokeAsDetail="no">
                    <bpelx:toProperties>
                      <bpelx:toProperty name="probability">Task3:0.5</bpelx:toProperty>
                      <bpelx:toProperty name="paths">path4 path5 path6 path7 path8 path9</bpelx:toProperty>
                    </bpelx:toProperties>
                  </invoke>
                  <if name="If6">
                    <sequence name="Sequence6">
                      <invoke name="Task5" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                              inputVariable="Service1_input" outputVariable="Service1_output" bpelx:invokeAsDetail="no">
                        <bpelx:toProperties>
                          <bpelx:toProperty name="probability">Task4:0.5</bpelx:toProperty>
                          <bpelx:toProperty name="paths">path5 path6 path7 path8 path9</bpelx:toProperty>
                        </bpelx:toProperties>
                      </invoke>
                      <if name="If7">
                        <sequence>
                          <invoke name="Task6" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                                  inputVariable="Service1_input" outputVariable="Service1_output"
                                  bpelx:invokeAsDetail="no">
                            <bpelx:toProperties>
                              <bpelx:toProperty name="probability">Task5:0.25</bpelx:toProperty>
                              <bpelx:toProperty name="paths">path6 path7</bpelx:toProperty>
                            </bpelx:toProperties>
                          </invoke>
                        </sequence>
                        <else>
                          <exit name="Exit1"/>
                        </else>
                      </if>
                      <if name="If8">
                        <invoke name="Task7" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                                inputVariable="Service1_input" outputVariable="Service1_output"
                                bpelx:invokeAsDetail="no">
                          <bpelx:toProperties>
                            <bpelx:toProperty name="probability">Task5:0.25 Task6:0.5</bpelx:toProperty>
                            <bpelx:toProperty name="paths">path6 path8</bpelx:toProperty>
                          </bpelx:toProperties>
                        </invoke>
                      </if>
                      <invoke name="Task8" partnerLink="ServiceProvider" portType="ns1:ServiceProviderProcess"
                              inputVariable="Service1_input" outputVariable="Service1_output" bpelx:invokeAsDetail="no">
                        <bpelx:toProperties>
                          <bpelx:toProperty name="probability">Task5:0.25 Task6:0.5 Task7:1</bpelx:toProperty>
                          <bpelx:toProperty name="paths">path6 path7 path8 path9</bpelx:toProperty>
                        </bpelx:toProperties>
                      </invoke>
                    </sequence>
                    <else>
                      <exit name="Exit2"/>
                    </else>
                  </if>
                </sequence>
                <else>
                  <exit name="Exit3"/>
                </else>
              </if>
            </sequence>
            <else>
              <exit name="Exit4"/>
            </else>
          </if>
        </sequence>
        <else>
          <exit name="Exit5"/>
        </else>
      </if>
    </sequence>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="coronaryheartdisease_client" portType="client:CoronaryHeartDisease" operation="process" variable="outputVariable"/>
  </sequence>
</process>

<!-- (1×0,5)+(1×0,5×0,5)+(1×0,5×0,5×0,5)+(1×0,5×0,5×0,5×0,5)+(1×0,5×0,5×0,5×0,5×0,25)+(1×0,5×0,5×0,5×0,5×0,25×1×1)+(1×0,5×0,5×0,5×0,5×0,25×1)+(1×0,5×0,5×0,5×0,5×0,25×0,5×1×1)+(1×0,5×0,5×0,5×0,5×0,25×0,5×1) -->